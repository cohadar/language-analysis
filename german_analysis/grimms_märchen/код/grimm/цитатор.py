from grimm.токенизер import ТОКЕН_ЗА_ПОЧЕТАК, ТОКЕН_ЗА_КРАЈ
from grimm.токенизер import ТОКЕН_ОТВОРЕНИ_НАВОДНИК, ТОКЕН_ЗАТВОРЕНИ_НАВОДНИК
from grimm.токенизер import је_спејс, је_реч, је_неодређени_наводник, је_токен_за_крај
from grimm.словизер import Словизер


class ЦитатГрешка(Exception):
    pass


class Цитатор:
    def __init__(бре, улаз):
        бре.улаз = улаз
        бре.излаз = []

    def __call__(бре):
        бре.директан_говор = False
        бре.и = Словизер(бре.улаз, почетак=ТОКЕН_ЗА_ПОЧЕТАК, крај=ТОКЕН_ЗА_КРАЈ)
        next(бре.и, ТОКЕН_ЗА_КРАЈ)
        while not је_токен_за_крај(бре.и.тренутно):
            бре.цитирај()
        return бре.излаз

    def цитирај(бре):
        т = бре.и.тренутно
        if је_неодређени_наводник(т):
            бре.излаз.append(бре.наводник())
        else:
            бре.излаз.append(т)
        next(бре.и, ТОКЕН_ЗА_КРАЈ)

    def __str__(бре):
        return ''.join((т.текст for т in бре.излаз))

    def одреди_наводник(бре, прет, след):
        if прет.текст in [':']:
            if бре.директан_говор:
                досад = ''.join([т.текст for т in бре.излаз])
                raise ЦитатГрешка(f'Лош цитат: ({бре.и.тренутно}), линија={бре.и.линија}, текст={досад[-100:]}')
            бре.директан_говор = True
            return ТОКЕН_ОТВОРЕНИ_НАВОДНИК
        elif прет.текст in [' ', '\n', '', '-'] and је_реч(след):
            if бре.директан_говор:
                досад = ''.join([т.текст for т in бре.излаз])
                raise ЦитатГрешка(f'Лош цитат: ({бре.и.тренутно}), линија={бре.и.линија}, текст={досад[-100:]}')
            бре.директан_говор = True
            return ТОКЕН_ОТВОРЕНИ_НАВОДНИК
        elif прет.текст in [',', ';', '.', '!', '?'] and след.текст in [' ', '\n', '']:
            if not бре.директан_говор:
                досад = ''.join([т.текст for т in бре.излаз])
                raise ЦитатГрешка(f'Лош цитат: ({бре.и.тренутно}), линија={бре.и.линија}, текст={досад[-100:]}')
            бре.директан_говор = False
            return ТОКЕН_ЗАТВОРЕНИ_НАВОДНИК
        elif (је_реч(прет) or прет.текст in ['‹', '\'']) and след.текст in [' ', '\n', '', ';']:
            if not бре.директан_говор:
                досад = ''.join([т.текст for т in бре.излаз])
                raise ЦитатГрешка(f'Лош цитат: ({бре.и.тренутно}), линија={бре.и.линија}, текст={досад[-100:]}')
            бре.директан_говор = False
            return ТОКЕН_ЗАТВОРЕНИ_НАВОДНИК

        return None

    def наводник(бре):
        н = бре.одреди_наводник(бре.и.претходно, бре.и.следеће)
        if н:
            бре.излаз.append(н)
            return next(бре.и, ТОКЕН_ЗА_КРАЈ)
        # if је_спејс(бре.и.претходно) and је_спејс(бре.и.следеће):
        #     бре.директан_говор = False
        #     бре.излаз.append(ТОКЕН_ЗАТВОРЕНИ_НАВОДНИК)
        #     return next(бре.и, ТОКЕН_ЗА_КРАЈ)
        if бре.и.тренутно.текст == "'":
            бре.излаз.append(бре.и.тренутно)
            return next(бре.и, ТОКЕН_ЗА_КРАЈ)
        else:
            досад = ''.join([т.текст for т in бре.излаз])
            raise ЦитатГрешка(f'Лош цитат: ({бре.и.тренутно}), линија={бре.и.линија}, текст={досад[-100:]}')

